%% -*- mode: erlang;erlang-indent-level: 4;indent-tabs-mode: nil -*-
%% ex: ft=erlang ts=4 sw=4 et
[{kernel,
    [{start_timer, true},
        {start_pg2, true}
    ]},
    {sasl, [
        {sasl_error_logger, {file, "log/erest_sasl.log"}}
    ]},
    {mnesia, [
        {dir, "var/data"},
        {dump_log_write_threshold, 20000}
    ]},
    {snowflake, [
                {machine_id, 1}
                                                                                                                                                                                                                                                                                                                                                    ]},
    {lager, [
        {error_logger_hwm, 5},
        {lager_console_backend, info},
        {error_logger_redirect, true},
        {crash_log, "log/erest_crash.log"},
        {handlers, [
           {lager_file_backend, [
               {file, "log/erest_error.log"},
               {level, error},
               {size, 1048576000},
               {date, "$D0"},
               {count, 10}
           ]},
           {lager_file_backend, [
               {file, "log/erest_info.log"},
               {level, info},
               {size, 1048576000},
               {date, "$D0"},
               {count, 10}
           ]},
            {lager_file_backend, [
                {file, "log/erest_debug.log"},
                {level, debug},
                {size, 1048576000},
                {date, "$D0"},
                {count, 10}
            ]}
        ]}
    ]},
    {msgbus_amqp_proxy, [
        {rabbitmqs, [
            {msgbus_rabbitmq_abj_mqfront_1, [
                {name, "localhost"},
                {exchange, <<"msgbus_amqp_proxy">>},
                {amqp_user, <<"guest">>},
                {amqp_pass, <<"guest">>},
                {amqp_vhost, <<"/">>},
                {amqp_host, "localhost"},
                {amqp_port, 5672}
            ]}         ]},

        {outgoing_queues, [
            {<<"msgbus_frontend_key_hw_push">>, <<"msgbus_frontend_queue_hw_push">>},
            {<<"msgbus_frontend_key_xiaomi_push">>, <<"msgbus_frontend_queue_xiaomi_push">>}
        ]},
        {incoming_queues, [
            {<<"1">>, <<"msgbus_mqtt_command_connect">>},
            {<<"3">>, <<"msgbus_mqtt_command_publish">>},
            {<<"4">>, <<"msgbus_mqtt_command_puback">>},
            {<<"5">>, <<"msgbus_mqtt_command_pubrec">>},
            {<<"6">>, <<"msgbus_mqtt_command_pubrel">>},
            {<<"7">>, <<"msgbus_mqtt_command_pubcomp">>},
            {<<"8">>, <<"msgbus_mqtt_command_subscribe">>},
            {<<"10">>, <<"msgbus_mqtt_command_unsubscribe">>},
            {<<"12">>, <<"msgbus_mqtt_command_pingreq">>},
            {<<"15">>, <<"msgbus_mqtt_command_get">>},
            {<<"14">>, <<"msgbus_mqtt_command_disconnect">>}

        ]},
        {receiver_module, logic_amqp_receiver},
        {stat_module, folsom_metrics},
        {receiver_msg_queue_len, 100}
    ]},
    {folsom, [
        {counter, [
            {mqtt_mq_recv, [mqtt]},
            {mqtt_mq_send, [mqtt]},
            {mqtt_package_recv, [mqtt]},
            {mqtt_other_recv, [mqtt]},
            {mqtt_connect_recv, [mqtt]},
            {mqtt_disconnect_recv, [mqtt]},
            {mqtt_pingreq_recv, [mqtt]},
            {mqtt_publish_recv, [mqtt]},
            {mqtt_publish_qos0_recv, [mqtt]},
            {mqtt_puback_recv, [mqtt]},
            {mqtt_subscribe_recv, [mqtt]},
            {mqtt_unsubscribe_recv,[mqtt]},
            {mqtt_ext_recv, [mqtt]},
            {mqtt_puback_send, [mqtt]},
            {mqtt_suback_send, [mqtt]},
            {mqtt_ext_send, [mqtt]},
            {mqtt_unsuback_send, [mqtt]}
        ]}
    ]},
    {eredis_pool, [
        {pools, []},
        {global_or_local, local}
    ]},
    {exometer, [
        {probe_defaults, [{min_heap_size, 1000}]},
        {report, [
            {reporters, [
                {exometer_report_influxdb, [{protocol, udp},
                    {host, <<"localhost">>},
                    {port, 18089},
                    {db, <<"udp">>}]}
            ]}
        ]}
    ]},
    {redis_hapool, [
        {redis_pools,[
            {redis_third_party_push_uid, 3, 2,
                [
                    {"localhost", 6379}
                ]
            }]
        }]
    },
    {erest, [
        {cb_host_yam, "localhost"}, %% couchbase
        {cb_bucket_yam, {"yam", "123456", "yam", 5}}, %% {<username>, <password>, <bucket>, <connection_num>}

        {cb_host_alias, "localhost"}, %% couchbase
        {cb_bucket_alias, {"alias", "123456", "alias", 5}}, %% {<username>, <password>, <bucket>, <connection_num>}

        {cb_host_stat, "localhost"},
        {cb_bucket_stat, {"stat", "123456", "stat", 5}},

        {cb_host_route, "localhost"},
        {cb_bucket_route, {"route_table", "123456", "route_table", 5}},

        {cb_host_reg, "localhost"},
        {cb_bucket_reg, {"reg", "123456", "reg", 5}},

        {cb_host_msg_queue, "localhost"},
        {cb_bucket_msg_queue, {"msg_queue", "123456", "msg_queue", 5}},

        {cb_host_meta, "localhost"},
        {cb_bucket_meta, {"meta", "123456", "meta", 5}},

        {etopicfs_get_url,"http://localhost:8090/"},
        {etopicfs_get_server, {"localhost", 8090, 2000, 5000}},
        {etopicfs_server, {"localhost", 8090, 2000, 5000}},
        {etopicfs_post_url,"http://localhost:8090/.topicfs"},
        {etopicfs_post_server, {"localhost", 8090, 2000, 5000}},  %% get aloready set etopicfs_server
        {etopicfs_post_path,"/.topicfs"},
        {etopicfs_get_path,"/"},
        {reg_service_url,"http://abj-reg-1.yunba.io:8383/"},
        {stat_ttl, 432000},
        {stat_elogic_opt, [
            {stat_publish_item, [
                {appkey, true},
                {topic, true},
                {qos, true}
            ]},
            {stat_active_online,[
                {day, true},
                {hour, true},
                {min, true}
            ]},
            {stat_time,[
                {day, true},
                {hour, true},
                {min, true},
                {sec, true}
            ]},
            {stat_flow_item, [
                {appkey, true},
                {topic, true},
                {messageId, true}
            ]},
            {stat_flow_cmd, [
                {online, true},
                {puback, true},
                {pubrel, true},
                {pubrec, true},
                {pubcomp, true}
            ]}
        ]},
        {stat_messageId_flag, false}, %% stat publish messageI id
        {enable_presence, true},
        {no_presence_appkey, ["564c13b8f085fc471efdfff8"]},
        {enable_recvack, true},
        {enable_stat_puback_msgId, false},
        {enable_stat_connect_time, false},
        {http_port, 8080},
        {current_logic_module, elogic},
        {sockproxy_heartbeat_timeout, 60000},
        {sockproxy_heartbeat_interval, 30000},
        {sockproxy_session_timeout, 60000},
        {worker_pool_size, 12000},
        {worker_pool_max_flow, 13000},
        {async_publish_fsm_timeout, 10000},
        {async_publish_recovery_timeout, 30000},
        {async_publish, true},
        {enable_async_publish_recovery, true},
        {redis_message, {"localhost", 6379, 10, 20}},
        {redis_stat, {"localhost", 6379, 10, 20}},
        {redis_msgid_stat, {"localhost",6379, 10, 20}},
        {mongo_db, {"abj-mongo-1.yunba.io", 27017, "drywall"}},
        {mongo_db_replset, [
            {repl, [
                "abj-mongo-1.yunba.io:27017",
                "abj-mongorep-1.yunba.io:27017",
                "abj-mongorep-2.yunba.io:27017"
            ]},
            {dbname, "drywall"}
        ]},
        {erest_stat_enable, false},

        {logic_stat_opt, [
            {enable_logic_stat, false},
            {appkey_stat_spiral,
                [
                    connect_packet_count,
                    publish_packet_count,
                    subscribe_packet_count,
                    extcmd_packet_count,
                    puback_packet_count,
                    suback_packet_count,
                    unsuback_packet_count
                ]
            },
            {appkey_stat_duration,
                [
                    subscribe_duration, publish_duration, extcmd_duration
                ]
            },
            {evm_stat_gauge,
                [
                    {evm_memory, [
                        evm_memory_used, evm_memory_allocated, evm_memory_unused, evm_memory_usage, %% Alloc = Used + Unused, Usage = Used/Alloc
                        evm_procs_used, evm_atoms_used, evm_binary_used, evm_ets_used
                    ]},
                    {evm_scheduler, [scheduler_usage]},
                    {evm_process, [process_count]}
                ]
            },
            {storage_server, [
                {storage_type, influxdb},
                {storage_host, {"localhost", 8086}},
                {storage_opts,[
                    {protocol, http},
                    {database, <<"test">>}
                ]}
            ]},
            {exometer_report_interval, 60000},
            {exometer_api_key, "abj-nogic-1"},
            {appkey_stat_prefix, "elogic_appkey_stat"}
        ]},
                {cache_route, [
                {is_enable, true },
                {info, [
                  { "564c13b8f085fc471efdfff8", [
                      { read, { read_redis_1, { "localhost", 6579, 500, 50  }}},
                              { write, { write_redis_1, { "localhost", 6379, 500, 50  }}}
        
                    ]} 
                     
                    ]}
                ]},
                        {enable_yam, false},
            {enable_alias_offline_message, false},
    
        {current_logic_module, elogic},
        {async_publish_fsm_storage, mnesia},

        {logic_active_stat_opts, [
            {active_stat_type, redis_set},
            {month_active, true},
            {month_active_ttl, 3456000}, % 40 days
            {day_active, true},
            {day_active_ttl, 432000},
            {hour_active, true},
            {hour_active_ttl, 432000},
            {minite_active, true},
            {minite_active_ttl, 432000},
            {active_keys_set_ttl, 3600},
            {active_stat_send_interval, 3000}
        ]},

        {appkey_cb_map, [
            { bbg_msgq, [
                {appkey,  ["554b602627302bb315893223", "5601fff34a481fa955f39786", "5601ffcf4a481fa955f39785", "5601ffa44a481fa955f39784"] },
                {cbinfo, { "msg_queue", "localhost", "123456", 100 }}
            ]}          ]},

        {appkey_cb_meta_map, [
            { bbg_cbmeta, [
                {appkey,  ["554b602627302bb315893223", "5601fff34a481fa955f39786", "5601ffcf4a481fa955f39785", "5601ffa44a481fa955f39784"] },
                {cbinfo, { "meta", "localhost", "123456", 100 }}
            ]}          ]},
        {msg_queue_version, 3} %% 0:  redis - rw, 1: redis - rw, cb - w, 2:  redis - w, couchbase - rw, 3: couchbase -rw
    ]}
].
